#!/usr/bin/env php

<?php

use Core\Database;
use Database\Migrations\RoomMigrations;
use Database\Migrations\ScheduleMigration;
use Database\Migrations\TenantMigration;
use Database\Migrations\UserMigration;
use Database\Seeder\UserSeeder;
use Dotenv\Dotenv;

require "vendor/autoload.php";

try {
	$dotenv = Dotenv::createImmutable(__DIR__);
	$dotenv->load();
} catch (Exception $e) {
	var_dump($e);
	die(0);
}

$migrations = [
	new UserMigration(),
	new RoomMigrations(),
	new TenantMigration(),
	new ScheduleMigration(),
];

$seeders = [
	new UserSeeder(),
];

$database = Database::getInstance();

$commandMap = [
	"migrate" => [
		"up" => function () use ($database, $migrations) {
			$database->migrate($migrations);
		},
		"rollback" => function () use ($database, $migrations) {
			$database->down($migrations);
		},
		"seed" => function () use ($database, $seeders) {
			$database->seed($seeders);
		},
	]
];

if (!isset($argv[1])) {
	printf("Invalid Command");
	die(0);
}

// more command pattern matching here
$args = explode(":", $argv[1]);

$commandMap[$args[0]][$args[1]]();

